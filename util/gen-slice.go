// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package util

import "fmt"

func StringInSlice(a String, list []String) bool {
	for _, b := range list {
		if b.Equals(a) {
			return true
		}
	}
	return false
}

func MapStringsToStrings(a []String) []string {
	result := make([]string, len(a))
	for i := 0; i < len(a); i++ {
		result[i] = fmt.Sprint(a[i])
	}

	return result
}

func RemoveFromStringSlice(slice []String, idx int) []String {
	return append(slice[:idx:idx], slice[idx+1:]...)
}

func CloneStringSlice(slice []String) []String {
	cloned := make([]String, len(slice))
	for i := 0; i < len(slice); i++ {
		cloned[i] = slice[i]
	}

	return cloned
}

func IntInSlice(a Int, list []Int) bool {
	for _, b := range list {
		if b.Equals(a) {
			return true
		}
	}
	return false
}

func MapIntsToStrings(a []Int) []string {
	result := make([]string, len(a))
	for i := 0; i < len(a); i++ {
		result[i] = fmt.Sprint(a[i])
	}

	return result
}

func RemoveFromIntSlice(slice []Int, idx int) []Int {
	return append(slice[:idx:idx], slice[idx+1:]...)
}

func CloneIntSlice(slice []Int) []Int {
	cloned := make([]Int, len(slice))
	for i := 0; i < len(slice); i++ {
		cloned[i] = slice[i]
	}

	return cloned
}
