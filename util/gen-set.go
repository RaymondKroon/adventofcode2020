// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package util

type StringSet struct {
	inner map[string]bool
}

func NewStringSet() StringSet {
	return StringSet{inner: make(map[string]bool, 50)}
}

func (fr *StringSet) First() string {
	for k, _ := range fr.inner {
		return k
	}

	panic("Empty FieldRange")
}

func (fr *StringSet) Len() int {
	return len(fr.inner)
}

func (fr *StringSet) Add(field string) {
	fr.inner[field] = true
}

func (fr *StringSet) Remove(field string) {
	delete(fr.inner, field)
}

type IntSet struct {
	inner map[int]bool
}

func NewIntSet() IntSet {
	return IntSet{inner: make(map[int]bool, 50)}
}

func (fr *IntSet) First() int {
	for k, _ := range fr.inner {
		return k
	}

	panic("Empty FieldRange")
}

func (fr *IntSet) Len() int {
	return len(fr.inner)
}

func (fr *IntSet) Add(field int) {
	fr.inner[field] = true
}

func (fr *IntSet) Remove(field int) {
	delete(fr.inner, field)
}
